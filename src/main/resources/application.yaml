#server:
#  port: 8087
#  servlet:
#    context-path: '/ead-authuser/'

spring:
  application:
    name: ead-authuser-service
  config:
    import: 'configserver:'
  cloud:
    config:
      discovery:
        service-id: ead-config-server
        
#  datasource:
#    url: jdbc:postgresql://localhost:5432/ead-authuser-v2
#    username: postgres
#    password: postgres
#  jpa:
#    hibernate:
#      ddl-auto: update
#      dialect: org.hibernate.dialect.PostgreSQLDialect
#      jdbc:
#        lob.non-contextual-creation: true
#    properties:
#      hibernate:
#        "[show_sql]": true
#  output:
#    ansi:
#      enabled: ALWAYS
#  rabbitmq:
#    addresses: amqps://lqqrjfiw:gfCDob9i20lCiR2BCLyrZJTzlf60YHld@whale.rmq.cloudamqp.com/lqqrjfiw
#      
#logging:
#  level:
#    '[com.ead]': TRACE
#    root: INFO
#    '[org.springframework.web]': DEBUG
#    '[org.hibernate]': INFO
#      
#ead:
#  api:
#    url:
#      course: 'http://ead-course-service/ead-course'
#  broker:
#    exchange:
#      userEvent: ead.userevent
#      
#eureka:
#  client:
#    service-url:
#      defaultZone: 'http://localhost:8761/eureka'
#      instance: localhost
#      
#resilience4j:
#  circuitbreaker:
#    instances:
#      circuitbreakerInstance:
#        sliding-window-size: 30
#        permitted-number-of-calls-in-half-open-state: 2
#        sliding-window-type: TIME_BASED
#        minimum-number-of-calls: 2
#        wait-duration-in-open-state: 30s
#        failure-rate-threshold: 80
#  retry:
#    instances:
#      retryInstance:
#        max-attempts: 3
#        wait-duration: 5s   